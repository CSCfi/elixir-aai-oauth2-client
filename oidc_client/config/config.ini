# -------------------------------------------------------------------------------------------------------
# Configuration File
# This file should be placed in ./config/config.ini relative to app.py
# To use another path for config.ini, an absolute path can be given in environment variable CONFIG_FILE
#
# Leave variables empty to use default values. Default values can be seen in config/__init__.py
# To overwrite a configuration variable written here in config.ini, use environment variable of the
# same name in all capital letters. For example, to overwrite the `client_secret` variable, the following
# command can be used: export CLIENT_SECRET=topsecretkeydonotshare
#
# [app] section contains configuration variables for the functioning of the web server
# [aai] section contains configuration variables for the client-server communication with AAI
# [cookie] section contains configuration variables for cookie management
# Custom sections can be added in a similar fashion, and be loaded with config/__init__.py
# An example custom section [elixir] has been added for ELIXIR AAI use case
# -------------------------------------------------------------------------------------------------------

# ****************************************
# Configuration for oidc-client web server
# ****************************************
[app]
# Hostname for oidc-client server
host=0.0.0.0

# Port for oidc-client server
port=8080

# Name for this API shown at root endpoint `/`
name=oidc-client

# Location of SSL cert.pem for serving web app via HTTPS, leave empty for HTTP
ssl_certfile=/etc/ssl/certs/cert.pem

# Location of SSL key.pem for serving web app via HTTPS, leave empty for HTTP
ssl_keyfile=/etc/ssl/certs/key.pem

# ***********************************
# Configuration for cookie management
# ***********************************
[cookie]
# Domain where cookie will be set
domain=localhost:8080

# Lifetime of access_token cookie in seconds (1 hour is a good value)
token_lifetime=3600

# Lifetime of oidc_state cookie in seconds (5 minutes is a good value)
state_lifetime=300

# If True, cookie can only travel via HTTPS, if False, cookie can travel in HTTP/HTTPS
secure=True

# If True, cookie can't be read by JavaScript, if False, cookie can be read with JavaScript
http_only=True

# ****************************
# Configuration for AAI server
# ****************************
[aai]
# Client ID of oidc-client
client_id=public

# Client secret for Client ID
client_secret=secret

# URL where authentication workflow begins
url_auth=https://login.elixir-czech.org/oidc/authorize

# URL that returns access token
url_token=https://login.elixir-czech.org/oidc/token

# URL for the userinfo endpoint at AAI
url_userinfo=https://login.elixir-czech.org/oidc/userinfo

# URL the AAI should return to after authentication
url_callback=localhost:8080/callback

# URL the OIDC Client should redirect to after authentication
url_redirect=localhost:5000

# URL to the token revocation endpoint at AAI
url_revoke=https://login.elixir-czech.org/oidc/revoke

# Claims requested for access token, for multiple values separate scopes by commas ','
scope=openid,ga4gh

# Trusted issuers of access token, separate multiple issuers with commas ','
iss=https://login.elixir-czech.org/oidc/

# Intended audiences of access token, separate multiple audiences with commas ','
aud=audience1,audience2

# JWK used to decode the JWT access token
jwk=

# Server that returns JWK
jwk_server=https://login.elixir-czech.org/oidc/jwk

# ****************************
# Configuration for ELIXIR AAI
# ****************************
[elixir]
# Value that should be present in the GA4GH claims to indicate user's Bona Fide researcher status 
bona_fide_value=bona_fide
