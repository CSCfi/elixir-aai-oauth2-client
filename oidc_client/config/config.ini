# -------------------------------------------------------------------------------------------------------
# Configuration File
# This file should be placed in ./config/config.ini relative to app.py
# To use another path for config.ini, an absolute path can be given in environment variable CONFIG_FILE
#
# Leave variables empty to use default values. Default values can be seen in config/__init__.py
# To overwrite a configuration variable written here in config.ini, use environment variable of the
# same name in all capital letters. For example, to overwrite the `client_secret` variable, the following
# command can be used: export CLIENT_SECRET=topsecretkeydonotshare
#
# [app] section contains configuration variables for the functioning of the web server
# [aai] section contains configuration variables for the client-server communication with AAI
# Custom sections can be added in a similar fashion, and be loaded with config/__init__.py
# An example custom section [elixir] has been added for ELIXIR AAI use case
# -------------------------------------------------------------------------------------------------------

# ****************************************
# Configuration for oidc-client web server
# ****************************************
[app]
# Hostname for oidc-client server
host=0.0.0.0

# Port for oidc-client server
port=8080

# Name for this API shown at root endpoint `/`
name=oidc-client

# ****************************
# Configuration for AAI server
# ****************************
[aai]
# Client ID of oidc-client
client_id=

# Client secret for Client ID
client_secret=secret

# URL where authentication workflow begins
url_auth=https://aai.org/auth

# URL that returns access token
url_token=https://aai.org/token

# URL the AAI should return to after authentication
url_callback=localhost:8080/callback

# Claims requested for access token, for multiple values separate scopes by space ' '
scope=openid ga4gh

# ****************************
# Configuration for ELIXIR AAI
# ****************************
[elixir]
# Value that should be present in the GA4GH claims to indicate user's Bona Fide researcher status 
bona_fide_value=bona_fide
